#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <stdlib.h>
#define TAMBUFFER 256

int main(int argc, char *argv[])
{
	int ID_socket_cli, result,long_ser;
   	struct sockaddr_in address_ser, address_cli;
   	struct hostent *h;
   	char mensaje[] = "Esto es un mensaje al mundo.";

   	if(argc<2) 
	{
    		printf("uso : %s servidor \n", argv[0]);
    		exit(1);
  	}

	ID_socket_cli=socket(AF_INET, SOCK_DGRAM,0);
   	if (ID_socket_cli==-1)
   	{
     		printf("error\n");
      		exit(-1);
   	}

		address_cli.sin_family = AF_INET;
   		address_cli.sin_addr.s_addr = htonl(INADDR_ANY);
   		address_cli.sin_port = htons(0);

   	result = bind(ID_socket_cli, (struct sockaddr *) &address_cli, sizeof(address_cli));
   	if (result<0) 
	{
      		printf("error\n");
      		exit(-1);
   	}

   	h = gethostbyname(argv[1]);
   	address_ser.sin_family = h->h_addrtype;
   	memcpy((char *) &address_ser.sin_addr.s_addr, h->h_addr_list[0], h->h_length);
   	address_ser.sin_port = htons(6000);

      	strcpy(mensaje,"");
      	strcpy(mensaje,"HELLO");
     
      	result = sendto(ID_socket_cli, mensaje, TAMBUFFER, 0, (struct sockaddr *) &address_ser, sizeof(address_ser));
	if(result<0)
	{
		printf("error\n");
		exit(-1);
	}
      	long_ser=sizeof(address_ser);
      	result=recvfrom(ID_socket_cli,mensaje,TAMBUFFER,0,(struct sockaddr*) &address_ser,&long_ser);
	if(result<0)
	{
		printf("error\n");
		exit(-1);
	}
      	printf("%s\n",mensaje);

      	do
	{
      		printf("Introduzca el cÃ³digo de la butaca que desea ocupar\nPLA-Platea\nPI1-Piso1\nPI2-Piso2\nPI3-Piso3\nGAL-Gallinero:\n ");
      		gets(mensaje);
      		result=sendto(ID_socket_cli,mensaje,TAMBUFFER,0,(struct sockaddr*) &address_ser,sizeof(address_ser));
		if(result<0)
		{
			printf("error\n");
			exit(-1);
		}

      		result=recvfrom(ID_socket_cli, mensaje, TAMBUFFER, 0, (struct sockaddr *) &address_ser, &long_ser);
		if(result<0)
		{
			printf("error\n");
			exit(-1);
		}

      		puts(mensaje);
		printf("\nPresione Intro");
		getchar();
		system("clear");
   	} 		
	while(strncmp(mensaje,"fin",3));

     	close(ID_socket_cli);
   	return 0;
}

